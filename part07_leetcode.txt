                                                                  *********ADVANCED SELECT AND JOINS**********
Q1731: The Number of Employees which Report to Each Employee
MySQL Solution:

select emp1.employee_id, emp1.name, count(emp2.reports_to) as reports_count,
round(avg(emp2.age),0) as average_age
from employees emp1 inner join employees emp2 on
emp2.reports_to=emp1.employee_id
group by emp1.employee_id, emp1.name
order by emp1.employee_id;
---------------------------------------------------------------------------------------------------------------------------------------------

Q1789: Primary Department of Each Employee
MYSQL Solution:

select employee_id, department_id from Employee
where primary_flag='Y' or employee_id
in (select employee_id from Employee group by employee_id 
having count(*)=1)
order by employee_id;
--------------------------------------------------------------------------------------------------------------------------------------------

Q610. Triangle Judgement
MYSQL Solution:

select x,y,z,
case when x+y > z and x+z > y and y+z > x then 'Yes'
else 'No'
end as Triangle
from Triangle;
---------------------------------------------------------------------------------------------------------------------------------------------

Q180. Consecutive Numbers
MySQL Solution

SELECT DISTINCT LOG1.num as ConsecutiveNums 
FROM Logs LOG1,Logs LOG2,Logs LOG3
WHERE LOG1.id=LOG2.id-1
AND LOG2.id=LOG3.id-1
AND LOG1.num=LOG2.num
AND LOG2.num=LOG3.num;
------------------------------------------------------------------------------------------------------------------------------------------

Q1164. Product Price at a Given date
MySQL Solution

select product_id, 10 as price
from products
group by product_id
having min(change_date)>'2019-08-16'
union all
select P.product_id, P.new_price as price 
from Products P inner join(
    select product_id, max(change_date) as max_date
    from Products
    where change_date <='2019-08-16'
    group by product_id) as R
    on P.product_id=R.product_id and P.change_date=R.max_date;

------------------------------------------------------------------------------------------------------------------------------------------
Q1204. Last Person To fit in The Bus
MySQL Solution

select person_name from Queue
where turn=(
    select max(turn) as turn from
(
    select q1.turn
    from Queue q1 join Queue q2
    on q1.turn>=q2.turn
    group by q1.turn
    having sum(q2.weight)<=1000
    order by q1.turn 
    ) as table1
);
------------------------------------------------------------------------------------------------------------------------------------------
Q1907. Count Salary Categories
MySQL Solution

select 'Low Salary' as category, count(*) as accounts_count 
from Accounts
where income < 20000
union
select 'Average Salary', count(*) 
from Accounts
where income between 20000 and 50000
union
select 'High Salary', count(*) 
from Accounts
where income > 50000;

-------------------------------------------------------------------------------------------------------------------------------------------
